package com.springbook.biz.board.impl;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

import org.springframework.stereotype.Repository;

import com.springbook.biz.board.BoardVO;
import com.springbook.biz.common.JDBCUtill;

// DAO (Data Access Object)
@Repository("boardDAO")
public class BoardDAO {
	// JDBC 관련 함수
	private Connection conn = null;
	private PreparedStatement stmt = null;
	private ResultSet rs = null;

	// SQL 명령어들
	private final String BOARD_INSERT = "insert into board(seq, title, writer, content) "
			+ "values(select nvl(max(seq), 0)+1 from board,?,?,?)";
	private final String BOARD_UPDATE = "update board set title=?, content=? where seq=?";
	private final String BOARD_DELETE = "delete board where seq=?";
	private final String BOARD_GET = "select * form board where seq=?";
	private final String BOARD_LIST = "select * form board order by seq desc";
	
	// CRUD 기능의 메소드 구현
	// 글 등록
	public void insertBoard(BoardVO vo) {
		System.out.println("===> JDBC로 insertBoard() 기능 처리");
		try {
			conn = JDBCUtill.getConnection();
			stmt = conn.prepareStatement(BOARD_INSERT);
			stmt.setString(1, vo.getTitle());
			stmt.setString(2, vo.getWriter());
			stmt.setString(3, vo.getContent());
			stmt.executeUpdate();
		} catch (Exception e) {
			e.printStackTrace();
		}finally {
			JDBCUtill.close(stmt, conn);
		}
	}
	
	// 글 수정
		public void updateBoard(BoardVO vo) {
			System.out.println("===> JDBC로 updateBoard() 기능 처리");
			try {
				conn = JDBCUtill.getConnection();
				stmt = conn.prepareStatement(BOARD_UPDATE);
				stmt.setString(1, vo.getTitle());
				stmt.setString(2, vo.getContent());
				stmt.setInt(3, vo.getSeq());
				stmt.executeUpdate();
			} catch (Exception e) {
				e.printStackTrace();
			}finally {
				JDBCUtill.close(stmt, conn);
			}
		}
		
		// 글 삭제
		public void deleteBoard(BoardVO vo) {
					System.out.println("===> JDBC로 deleteBoard() 기능 처리");
					try {
						conn = JDBCUtill.getConnection();
						stmt = conn.prepareStatement(BOARD_DELETE);
						stmt.setInt(1, vo.getSeq());
						stmt.executeUpdate();
					} catch (Exception e) {
						e.printStackTrace();
					}finally {
						JDBCUtill.close(stmt, conn);
					}
				}

}

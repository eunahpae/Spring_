<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

	<context:component-scan
		base-package="com.springbook.biz"></context:component-scan>
	<aop:aspectj-autoproxy />

	<!-- DataSource 설정 -->
	<context:property-placeholder
		location="classpath:config/database.properties"></context:property-placeholder>
	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<!-- Spring JDBC 설정 -->
	<bean id="jdbcTemplate"
		class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

</beans>

<!-- <bean id="before" class="com.springbook.biz.common.BeforeAdvice" /> 
	<aop:config> <aop:pointcut id="allPointcut" expression="execution(* com.springbook.biz..*Impl.*(..))" 
	/> <aop:pointcut id="getPointcut" expression="execution(* com.springbook.biz..*Impl.get*(..))" 
	/> <aop:aspect ref="before"> <aop:before pointcut-ref="allPointcut" method="beforeLog" 
	/> </aop:aspect> </aop:config> <bean id="afterReturning" class="com.springbook.biz.common.AfterReturningAdvice" 
	/> <bean id="afterThrowing" class="com.springbook.biz.common.AfterThrowingAdvice" 
	/> <bean id="after" class="com.springbook.biz.common.AfterAdvice" /> <aop:config> 
	<aop:pointcut id="allPointcut" expression="execution(* com.springbook.biz..*Impl.*(..))" 
	/> <aop:aspect ref="afterReturning"> <aop:after-returning pointcut-ref="allPointcut" 
	method="afterLog" returning="returnObj" /> </aop:aspect> <aop:aspect ref="afterThrowing"> 
	<aop:after-throwing pointcut-ref="allPointcut" method="exceptionLog" throwing="exceptObj" 
	/> </aop:aspect> <aop:aspect ref="after"> <aop:after-throwing pointcut-ref="allPointcut" 
	method="finallyLog" /> </aop:aspect> </aop:config> <bean id="around" class="com.springbook.biz.common.AroundAdvice" 
	/> <aop:config> <aop:pointcut id="allPointcut" expression="execution(* com.springbook.biz..*Impl.*(..))" 
	/> <aop:aspect ref="around"> <aop:around pointcut-ref="allPointcut" method="aroundLog" 
	/> </aop:aspect> </aop:config> <bean id="userService" class="com.springbook.biz.user.Impl.UserServiceimpl"> 
	<property name="userDAO" ref="userDAO" /> </bean> <bean id="userDAO" class="com.springbook.biz.user.Impl.UserDAO" 
	/> -->

<!-- <context:component-scan base-package="polymorphism"></context:component-scan> 
	<bean class="polymorphism.SonySpeaker"></bean> 빈(Bean) 정의 <bean id="samsung" 
	class="polymorphism.SamsungTV" p:speaker-ref="sony" p:price="270000"> <constructor-arg 
	index="0" ref="Apple"></constructor-arg> <constructor-arg index="1" value="270000"></constructor-arg> 
	<property name="speaker" ref="apple"></property> <property name="price" value="270000"></property> 
	</bean> <bean id="sony" class="polymorphism.SonySpeaker" /> <bean id="apple" 
	class="polymorphism.AppleSpeaker" /> <bean id="lg" class="polymorphism.LgTV"> 
	</bean> <bean id="collectionBean" class="com.springbook.ioc.injection.CollectionBean"> 
	<property name="addressList"> <list> <value>서울시 강남구 역삼동</value> <value>서울시 
	성동구 행당동</value> </list> <set value-type="java.lang.String"> <value>서울시 강남구 
	역삼동</value> <value>서울시 성동구 행당동</value> <value>서울시 성동구 행당동</value> </set> 
	<map> <entry> <key> <value>고길동</value> </key> <value>서울시 강남구 역삼동</value> 
	</entry> <entry> <key> <value>마이콜</value> </key> <value>서울시 성동구 행당동</value> 
	</entry> </map> </property> </bean> -->